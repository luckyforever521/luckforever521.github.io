<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-07-02T01:12:35.828Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>计算机网络</title>
    <link href="http://example.com/2021/04/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E5%89%AF%E6%9C%AC/"/>
    <id>http://example.com/2021/04/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%20-%20%E5%89%AF%E6%9C%AC/</id>
    <published>2021-04-20T09:00:00.000Z</published>
    <updated>2021-07-02T01:12:35.828Z</updated>
    
    <content type="html"><![CDATA[<h1 id="网络层次划分"><a href="#网络层次划分" class="headerlink" title="网络层次划分"></a>网络层次划分</h1><p>​        为了使不同计算机厂家生产的计算机能够相互通信，以便在更大的范围内建立计算机网络，国际标准化组织（ISO）在1978年提出了“开放系统互联参考模型”，即著名的OSI/RM模型（Open System Interconnection/Reference Model）。它将计算机网络体系结构的通信协议划分为七层，自下而上依次为：物理层（Physics Layer）、数据链路层（Data Link Layer）、网络层（Network Layer）、传输层（Transport Layer）、会话层（Session Layer）、表示层（Presentation Layer）、应用层（Application Layer）。其中第四层完成数据传送服务，上面三层面向用户。</p><p>　　除了标准的OSI七层模型以外，常见的网络层次划分还有TCP/IP四层协议以及TCP/IP五层协议，它们之间的对应关系如下图所示：</p><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629104655430.png" alt="image-20210629104655430"></p><h1 id="OSI七层网络模型"><a href="#OSI七层网络模型" class="headerlink" title="OSI七层网络模型"></a>OSI七层网络模型</h1><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629104748900.png" alt="image-20210629104748900"  /><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629121007165.png" alt="image-20210629121007165"></p><h2 id="物理层（Physical-Layer）"><a href="#物理层（Physical-Layer）" class="headerlink" title="物理层（Physical Layer）"></a><strong>物理层（Physical Layer）</strong></h2><p>​        激活、维持、关闭通信端点之间的机械特性、电气特性、功能特性以及过程特性。<strong>该层为上层协议提供了一个传输数据的可靠的物理媒体。简单的说，物理层确保原始的数据可在各种物理媒体上传输。</strong>物理层记住两个重要的设备名称，中继器（Repeater，也叫放大器）和集线器。</p><h2 id="数据链路层（Data-Link-Layer）"><a href="#数据链路层（Data-Link-Layer）" class="headerlink" title="数据链路层（Data Link Layer）"></a><strong>数据链路层（Data Link Layer）</strong></h2><p>​        数据链路层在物理层提供的服务的基础上向网络层提供服务，其最基本的服务是将源自网络层来的数据可靠地传输到相邻节点的目标机网络层。为达到这一目的，数据链路必须具备一系列相应的功能，<strong>主要有：如何将数据组合成数据块，在数据链路层中称这种数据块为帧（frame）</strong>，帧是数据链路层的传送单位；如何控制帧在物理信道上的传输，包括如何处理传输差错，如何调节发送速率以使与接收方相匹配；以及在两个网络实体之间提供数据链路通路的建立、维持和释放的管理。数据链路层在不可靠的物理介质上提供可靠的传输。该层的作用包括：<strong>物理地址寻址、数据的成帧、流量控制、数据的检错、重发</strong>等。</p><p>​        有关数据链路层的重要知识点：</p><p>　　<strong>1 数据链路层为网络层提供可靠的数据传输；</strong></p><p>　　<strong>2基本数据单位为帧；</strong></p><p>　　<strong>3主要的协议：以太网协议；</strong></p><p>　　<strong>4两个重要设备名称：网桥和交换机</strong>。</p><h2 id="网络层（Network-Layer）"><a href="#网络层（Network-Layer）" class="headerlink" title="网络层（Network Layer）"></a><strong>网络层（Network Layer）</strong></h2><p>​        网络层的目的是实现两个端系统之间的数据透明传送，具体功能包括<strong>寻址和路由选择、连接的建立、保持和终止</strong>等。它提供的服务使传输层不需要了解网络中的数据传输和交换技术。如果您想用尽量少的词来记住网络层，那就是“路径选择、路由及逻辑寻址”。</p><p>　　网络层中涉及众多的协议，其中包括最重要的协议，也是TCP/IP的核心协议——**==IP协议==<strong>。IP协议非常简单，仅仅</strong>==提供不可靠、无连接的传送服务==**。</p><p>​        IP协议的主要功能有：无连接数据报传输、数据报路由选择和差错控制。与IP协议配套使用实现其功能的还有地址解析协议ARP、逆地址解析协议RARP、因特网报文协议ICMP、因特网组管理协议IGMP。具体的协议我们会在接下来的部分进行总结，有关网络层的重点为： </p><p>网络层负责对子网间的数据包进行路由选择。此外，网络层还可以实现拥塞控制、网际互连等功能；基本数据单位为IP数据报; 包含的主要协议：</p><p>　　<strong>IP协议（Internet Protocol，因特网互联协议）;</strong></p><p>　　<strong>ICMP协议（Internet Control Message Protocol，因特网控制报文协议）;</strong></p><p>　　<strong>ARP协议（Address Resolution Protocol，地址解析协议）;</strong></p><p>　　<strong>RARP协议（Reverse Address Resolution Protocol，逆地址解析协议）。</strong></p><p>　重要的设备：路由器。</p><h2 id="传输层（Transport-Layer）"><a href="#传输层（Transport-Layer）" class="headerlink" title="传输层（Transport Layer）"></a><strong>传输层（Transport Layer）</strong></h2><p>​        第一个端到端，即主机到主机的层次。传输层负责将上层数据分段并提供端到端的、可靠的或不可靠的传输。此外，传输层还要处理端到端的差错控制和流量控制问题。</p><p>　　传输层的任务是根据通信子网的特性，最佳的利用网络资源，为两个端系统的会话层之间，提供建立、维护和取消传输连接的功能，负责端到端的可靠数据传输。在这一层，信息传送的协议数据单元称为段或报文。</p><p>　　<strong>网络层只是根据网络地址将源结点发出的数据包传送到目的结点，而传输层则负责将数据可靠地传送到相应的端口</strong>。</p><p>​        <strong>传输层负责将上层数据分段并提供端到端的、可靠的或不可靠的传输以及端到端的差错控制和流量控制问题；</strong></p><p>　　包含的主要协议：</p><p>​                <strong>TCP协议（Transmission Control Protocol，传输控制协议）</strong></p><p>​                <strong>UDP协议（User Datagram Protocol，用户数据报协议）</strong></p><p>　　 重要设备：网关。</p><h2 id="会话层"><a href="#会话层" class="headerlink" title="会话层"></a><strong>会话层</strong></h2><p>​        会话层管理主机之间的会话进程，即负责建立、管理、终止进程之间的会话。会话层还利用在数据中插入校验点来实现数据的同步。</p><h2 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a><strong>表示层</strong></h2><p>​        表示层对上层数据或信息进行变换以保证一个主机应用层信息可以被另一个主机的应用程序理解。表示层的数据转换包括数据的加密、压缩、格式转换等。</p><h2 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a><strong>应用层</strong></h2><p>为操作系统或网络应用程序提供访问网络服务的接口。</p><p>会话层、表示层和应用层重点：</p><p>　　<strong>1数据传输基本单位为报文；</strong></p><p>　　<strong>2 包含的主要协议：FTP（文件传送协议）、Telnet（远程登录协议）、DNS（域名解析协议）、SMTP（邮件传送协议），POP3协议（邮局协议），HTTP协议（Hyper Text Transfer Protocol）。</strong></p><h1 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h1><p>​        <strong>（1）网络地址</strong></p><p>　　        IP地址由网络号（包括子网号）和主机号组成，网络地址的主机号为全0，网络地址代表着整个网络。</p><p>　　<strong>（2）广播地址</strong></p><p>　　        广播地址通常称为直接广播地址，是为了区分受限广播地址。</p><p>　　        广播地址与网络地址的主机号正好相反，广播地址中，主机号为全1。当向某个网络的广播地址发送消息时，该网络内的所有主机都能收到该广播消息。</p><p>　　<strong>（3）组播地址</strong></p><p>　　        D类地址就是组播地址。</p><p>　　        A类地址以0开头，第一个字节作为网络号，地址范围为：0.0.0.0~127.255.255.255；</p><p>　　        B类地址以10开头，前两个字节作为网络号，地址范围是：128.0.0.0~191.255.255.255;</p><p>　　        C类地址以110开头，前三个字节作为网络号，地址范围是：192.0.0.0~223.255.255.255。</p><p>　　        D类地址以1110开头，地址范围是224.0.0.0~239.255.255.255，D类地址作为组播地址（一对多的通信）；</p><p>　　        E类地址以1111开头，地址范围是240.0.0.0~255.255.255.255，E类地址为保留地址，供以后使用。</p><p>　　        注：只有A,B,C有网络号和主机号之分，D类地址和E类地址没有划分网络号和主机号。</p><p>　　<strong>（4）255.255.255.255</strong></p><p>　　    该IP地址指的是受限的广播地址。受限广播地址与一般广播地址（直接广播地址）的区别在于，受限广播地址只能用于本地网络，路由器不会转发以受限广播地址为目的地址的分组；一般广播地址既可在本地广播，也可跨网段广播。例如：主机192.168.1.1/30上的直接广播数据包后，另外一个网段192.168.1.5/30也能收到该数据报；若发送受限广播数据报，则不能收到。</p><p>　　注：一般的广播地址（直接广播地址）能够通过某些路由器（当然不是所有的路由器），而受限的广播地址不能通过路由器。</p><p>　　<strong>（5）0.0.0.0</strong></p><p>　　        常用于寻找自己的IP地址，例如在我们的RARP，BOOTP和DHCP协议中，若某个未知IP地址的无盘机想要知道自己的IP地址，它就以255.255.255.255为目的地址，向本地范围（具体而言是被各个路由器屏蔽的范围内）的服务器发送IP请求分组。</p><p>　　<strong>（6）回环地址</strong></p><p>　　        127.0.0.0/8被用作回环地址，回环地址表示本机的地址，常用于对本机的测试，用的最多的是127.0.0.1。</p><p>　　<strong>（7）A、B、C类私有地址</strong></p><p>　　        私有地址(private address)也叫专用地址，它们不会在全球使用，只具有本地意义。</p><p>　　        A类私有地址：10.0.0.0/8，范围是：10.0.0.0~10.255.255.255</p><p>　　        B类私有地址：172.16.0.0/12，范围是：172.16.0.0~172.31.255.255</p><p>　　        C类私有地址：192.168.0.0/16，范围是：192.168.0.0~192.168.255.255</p><h1 id="ARP-RARP协议"><a href="#ARP-RARP协议" class="headerlink" title="ARP/RARP协议"></a>ARP/RARP协议</h1><p>​        <strong>地址解析协议，即ARP（Address Resolution Protocol），是根据IP地址获取物理地址的一个TCP/IP协议。</strong>主机发送信息时将包含目标IP地址的ARP请求广播到网络上的所有主机，并接收返回消息，以此确定目标的物理地址；收到返回消息后将该IP地址和物理地址存入本机ARP缓存中并保留一定时间，下次请求时直接查询ARP缓存以节约资源。地址解析协议是建立在网络中各个主机互相信任的基础上的，网络上的主机可以自主发送ARP应答消息，其他主机收到应答报文时不会检测该报文的真实性就会将其记入本机ARP缓存；由此攻击者就可以向某一主机发送伪ARP应答报文，使其发送的信息无法到达预期的主机或到达错误的主机，这就构成了一个ARP欺骗。<strong>ARP命令可用于查询本机ARP缓存中IP地址和MAC地址的对应关系、添加或删除静态对应关系等。</strong></p><p>　　ARP工作流程举例：</p><p>　　主机A的IP地址为192.168.1.1，MAC地址为0A-11-22-33-44-01；</p><p>　　主机B的IP地址为192.168.1.2，MAC地址为0A-11-22-33-44-02；</p><p>　　当主机A要与主机B通信时，地址解析协议可以将主机B的IP地址（192.168.1.2）解析成主机B的MAC地址，以下为工作流程：</p><p>　　（1）根据主机A上的路由表内容，IP确定用于访问主机B的转发IP地址是192.168.1.2。然后A主机在自己的本地ARP缓存中检查主机B的匹配MAC地址。</p><p>　　（2）如果主机A在ARP缓存中没有找到映射，它将询问192.168.1.2的硬件地址，从而将ARP请求帧广播到本地网络上的所有主机。源主机A的IP地址和MAC地址都包括在ARP请求中。本地网络上的每台主机都接收到ARP请求并且检查是否与自己的IP地址匹配。如果主机发现请求的IP地址与自己的IP地址不匹配，它将丢弃ARP请求。</p><p>　　（3）主机B确定ARP请求中的IP地址与自己的IP地址匹配，则将主机A的IP地址和MAC地址映射添加到本地ARP缓存中。</p><p>　　（4）主机B将包含其MAC地址的ARP回复消息直接发送回主机A。</p><p>　　（5）当主机A收到从主机B发来的ARP回复消息时，会用主机B的IP和MAC地址映射更新ARP缓存。本机缓存是有生存期的，生存期结束后，将再次重复上面的过程。主机B的MAC地址一旦确定，主机A就能向主机B发送IP通信了。</p><p>　　<strong>逆地址解析协议，即RARP，功能和ARP协议相对，其将局域网中某个主机的物理地址转换为IP地址</strong>，比如局域网中有一台主机只知道物理地址而不知道IP地址，那么可以通过RARP协议发出征求自身IP地址的广播请求，然后由RARP服务器负责回答。</p><p>　　RARP协议工作流程：</p><p>　　（1）给主机发送一个本地的RARP广播，在此广播包中，声明自己的MAC地址并且请求任何收到此请求的RARP服务器分配一个IP地址；</p><p>　　（2）本地网段上的RARP服务器收到此请求后，检查其RARP列表，查找该MAC地址对应的IP地址；</p><p>　　（3）如果存在，RARP服务器就给源主机发送一个响应数据包并将此IP地址提供给对方主机使用；</p><p>　　（4）如果不存在，RARP服务器对此不做任何的响应；</p><p>　　（5）源主机收到从RARP服务器的响应信息，就利用得到的IP地址进行通讯；如果一直没有收到RARP服务器的响应信息，表示初始化失败。</p><h1 id="路由选择协议"><a href="#路由选择协议" class="headerlink" title="路由选择协议"></a>路由选择协议</h1><p>常见的路由选择协议有：RIP协议、OSPF协议。</p><p>　　<strong>RIP协议</strong> ：底层是贝尔曼福特算法，它选择路由的度量标准（metric)是跳数，最大跳数是15跳，如果大于15跳，它就会丢弃数据包。</p><p>　　<strong>OSPF协议</strong>：Open Shortest Path First开放式最短路径优先，底层是迪杰斯特拉算法，是链路状态路由选择协议，它选择路由的度量标准是带宽，延迟。</p><h1 id="TCP-IP协议"><a href="#TCP-IP协议" class="headerlink" title="TCP/IP协议"></a>TCP/IP协议</h1><p>​        <strong>TCP/IP协议是Internet最基本的协议，由网络层的IP协议和传输层的TCP协议组成。通俗而言：TCP负责发现传输的问题，一有问题就发出信号，要求重新传输，直到所有数据安全正确地传输到目的地。而IP是给因特网的每一台联网设备规定一个地址。</strong></p><p>　　IP层接收由更低层（网络接口层例如以太网设备驱动程序）发来的数据包，并把该数据包发送到更高层—<strong>TCP或UDP层</strong>；相反，IP层也把从TCP或UDP层接收来的数据包传送到更低层。IP数据包是不可靠的，因为IP并没有做任何事情来确认数据包是否按顺序发送的或者有没有被破坏，IP数据包中含有发送它的主机的地址（源地址）和接收它的主机的地址（目的地址）。</p><p> 　TCP是面向连接的通信协议，通过三次握手建立连接，通讯完成时要拆除连接，由于TCP是面向连接的所以只能用于端到端的通讯。TCP提供的是一种可靠的数据流服务，采用“带重传的肯定确认”技术来实现传输的可靠性。TCP还采用一种称为“滑动窗口”的方式进行流量控制，所谓窗口实际表示接收能力，用以限制发送方的发送速度。</p><blockquote><h2 id="TCP报文首部格式"><a href="#TCP报文首部格式" class="headerlink" title="TCP报文首部格式"></a>TCP报文首部格式</h2></blockquote><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629201931657.png" alt="image-20210629201931657" style="zoom: 80%;" /><ul><li>seq序号 ：用于对字节流进行编号，例如序号为 301，表示第一个字节的编号为 301，如果携带的数据长度为 100字节，那么下一个报文段的序号应为 401。</li><li>确认号 ：期望收到的下一个报文段的序号。例如 B 正确收到 A 发送来的一个报文段，序号为 501，携带的数据长度为 200 字节，因此 B 期望下一个报文段的序号为 701，B 发送给 A 的确认报文段中确认号就为 701。</li><li>数据偏移 ：指的是数据部分距离报文段起始处的偏移量，实际上指的是首部的长度。</li><li>确认 <strong>ACK</strong> ：当 ACK=1 时确认号字段有效，否则无效。TCP 规定，在连接建立后所有传送的报文段都必须把ACK 置 1。</li><li>同步 <strong>SYN</strong> ：在连接建立时用来同步序号。当 SYN=1，ACK=0 时表示这是一个连接请求报文段。若对方同意建立连接，则响应报文中 SYN=1，ACK=1。</li><li>终止 <strong>FIN</strong> ：用来释放一个连接，当 FIN=1 时，表示此报文段的发送方的数据已发送完毕，并要求释放连接。</li><li>窗口 ：窗口值作为接收方让发送方设置其发送窗口的依据。之所以要有这个限制，是因为接收方的数据缓存空<br>间是有限的。  </li></ul><h2 id="TCP协议的三次握手"><a href="#TCP协议的三次握手" class="headerlink" title="TCP协议的三次握手"></a>TCP协议的三次握手</h2><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629202704459.png" alt="image-20210629202704459" style="zoom: 67%;" /><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210629202751437.png" alt="image-20210629202751437" style="zoom: 67%;" /><p>​        服务器发出一个被动打开的命令，准备接收客户端的请求，并不断检测是否有客户端进程发起请求。客户端发出主动打开命令，表明要向某个IP地址的某个端口建立传输连接。</p><p>​        一次握手：客户端向服务器发送带有SYN标志的数据包（同步SYN=1，seq=x）</p><p>​        二次握手：服务器向客户端发送带有SYN/ACK的数据包(同步SYN=1，ACK=1,seq=y,ack=x+1)，表示同意建立连接。</p><p>​        三次握手：客户端向服务器发送带有ACK的数据包(ACK=1,seq=x+1,ack=y+1)</p><h3 id="为什么要三次握手"><a href="#为什么要三次握手" class="headerlink" title="为什么要三次握手"></a>为什么要三次握手</h3><p>​        三次握手的目的是建立可靠的通信信道，通信简单来说就是数据的发送与接收，而三次握手最主要的目的就是双方确认自己与对方的发送与接收是正常的。</p><p>​        <img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630092902343.png" alt="image-20210630092902343" style="zoom: 67%;" /></p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630093138246.png" alt="image-20210630093138246" style="zoom:80%;" /><h2 id="四次挥手"><a href="#四次挥手" class="headerlink" title="四次挥手"></a>四次挥手</h2><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630093314229.png" alt="image-20210630093314229" style="zoom:80%;" /><ul><li>数据传输结束后，客户端向服务器发送一个FIN，用来关闭客户端到服务器的数据传送。</li><li>服务器收到FIN，然后发送一个ACK，确认序号为收到的序号加1，这样，从客户端到服务器的连接就释放了，连接处于半关闭状态。</li><li>服务器向客户端发送一个FIN，用来关闭服务器到客户端的数据传送。</li><li>客户端收到FIN，然后发送一个ACK，确认序号为收到的序号加1，这样，从服务器到客户端的连接就释放了，释放整个连接。</li></ul><h3 id="为什么要四次挥手"><a href="#为什么要四次挥手" class="headerlink" title="为什么要四次挥手"></a>为什么要四次挥手</h3><p>​        任何一方都可以在数据传输结束后发出释放连接的通知，待对方确认进入半关闭状态。当另一方也没有数据再发送的时候，则发出释放连接的通知，对方确认后就完全关闭了TCP连接。</p><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630120947922.png" alt="image-20210630120947922"></p><h2 id="TCP和UDP的区别"><a href="#TCP和UDP的区别" class="headerlink" title="TCP和UDP的区别"></a>TCP和UDP的区别</h2><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630121629314.png" alt="image-20210630121629314"></p><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630121701043.png" alt="image-20210630121701043"></p><h2 id="TCP协议如何保证可靠传输"><a href="#TCP协议如何保证可靠传输" class="headerlink" title="TCP协议如何保证可靠传输"></a>TCP协议如何保证可靠传输</h2><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630150318743.png" alt="image-20210630150318743"></p><h1 id="TCP滑动窗口"><a href="#TCP滑动窗口" class="headerlink" title="TCP滑动窗口"></a>TCP滑动窗口</h1><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630150424349.png" alt="image-20210630150424349"  /><h1 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h1><h2 id="在浏览器中输入www-baidu-com后执行的全部过程"><a href="#在浏览器中输入www-baidu-com后执行的全部过程" class="headerlink" title="在浏览器中输入www.baidu.com后执行的全部过程"></a>在浏览器中输入<a href="http://www.baidu.com后执行的全部过程/">www.baidu.com后执行的全部过程</a></h2><p>1.应用层：客户端浏览器通过DNS解析到<a href="http://www.baidu.com的ip地址220.181.27.48,通过这个ip地址找到客户端到服务器的路径.客户端浏览器发起一个http会话到220.161.27.48,然后通过tcp进行封装数据包,输入到网络层./">www.baidu.com的IP地址220.181.27.48，通过这个IP地址找到客户端到服务器的路径。客户端浏览器发起一个HTTP会话到220.161.27.48，然后通过TCP进行封装数据包，输入到网络层。</a></p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210702083011435.png" alt="image-20210702083011435" style="zoom:67%;" /><p>2、传输层:在客户端的传输层，把HTTP会话请求分成报文段，添加源和目的端口，如服务器使用80端口监听客户端的请求，客户端由系统随机选择一个端口如5000，与服务器进行交换，服务器把相应的请求返回给客户端的5000端口。然后使用IP层的IP地址查找目的端。</p><p>3、客户端的网络层不用关心应用层或者传输层的东西，主要做的是**==通过查找路由表确定如何到达服务器==**，期间可能经过多个路由器，这些都是由路由器来完成的工作，通过查找路由表决定通过那个路径到达服务器,其中用到路由选择协议。</p><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210702083056034.png" alt="image-20210702083056034"></p><p>4、客户端的链路层，包通过链路层发送到路由器，通过邻居协议查找给定IP地址的MAC地址，然后发送ARP请求查找目的地址，如果得到回应后就可以<strong>使用ARP的请求应答交换的IP数据包</strong>，然后发送IP数据包到达服务器的地址。</p><p><strong>ARP(地址解析协议)</strong></p><p>不管网络层使用的是什么协议，在实际网络的链路上传送数据帧时，最终还是必须使用硬件地址。每一个主机都设有一个 ARP 高速缓存(ARP cache)，里面有所在的局域网上的各主机和路由器的 IP 地址到硬件地址的映射表。当主机 A 欲向本局域网上的某个主机 B 发送 IP 数据报时，就先在其 ARP 高速缓存中查看有无主机 B 的 IP 地址。如有，就可查出其对应的硬件地址，再将此硬件地址写入 MAC 帧，然后通过局域网将该 MAC 帧发往此硬件地址。</p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210702083126951.png" alt="image-20210702083126951" style="zoom:67%;" /><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630154305267.png" alt="image-20210630154305267" style="zoom:67%;" /><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630154316728.png" alt="image-20210630154316728" style="zoom:80%;" /><h2 id="Cookie和session"><a href="#Cookie和session" class="headerlink" title="Cookie和session"></a>Cookie和session</h2><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630171504068.png" alt="image-20210630171504068"></p><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630171520862.png" alt="image-20210630171520862"></p><h2 id="HTTP和HTTPS的区别"><a href="#HTTP和HTTPS的区别" class="headerlink" title="HTTP和HTTPS的区别"></a>HTTP和HTTPS的区别</h2><p><img src="https://gitee.com/liu-hengyun/lhy/raw/master/images/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/image-20210630171609497.png" alt="image-20210630171609497"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;网络层次划分&quot;&gt;&lt;a href=&quot;#网络层次划分&quot; class=&quot;headerlink&quot; title=&quot;网络层次划分&quot;&gt;&lt;/a&gt;网络层次划分&lt;/h1&gt;&lt;p&gt;​        为了使不同计算机厂家生产的计算机能够相互通信，以便在更大的范围内建立计算机网络，国际标准化</summary>
      
    
    
    
    <category term="计算机网络" scheme="http://example.com/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    
    <category term="计算机网络" scheme="http://example.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
    <category term="网络模型" scheme="http://example.com/tags/%E7%BD%91%E7%BB%9C%E6%A8%A1%E5%9E%8B/"/>
    
    <category term="tcp/IP协议" scheme="http://example.com/tags/tcp-IP%E5%8D%8F%E8%AE%AE/"/>
    
  </entry>
  
</feed>
